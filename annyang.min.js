// annyang
// version : 0.1.0
// author : Tal Ater
// license : GNU v2
// TalAter.com
(function(){"use strict";var e=this,t,n,r=!1,i="font-weight: bold; color: #00f;";if(!("webkitSpeechRecognition"in e)){e.annyang=null;return null}var s=/\((.*?)\)/g,o=/(\(\?)?:\w+/g,u=/\*\w+/g,a=/[\-{}\[\]+?.,\\\^$|#\s]/g,f=function(e){e=e.replace(a,"\\$&").replace(s,"(?:$1)?").replace(o,function(e,t){return t?e:"([^\\s]+)"}).replace(u,"(.*?)");return new RegExp("^"+e+"$","i")};e.annyang={init:function(s){n=new webkitSpeechRecognition;n.maxAlternatives=5;n.continuous=!0;n.lang="en";n.onstart=function(){};n.onerror=function(){};n.onend=function(){};n.onresult=function(n){var s=n.results[n.resultIndex],o;for(var u=0;u<s.length;u++){o=s[u].transcript.trim();r&&e.console.log("Speech recognized: %c"+o,i);for(var a in t){var f=t[a].command.exec(o);if(f){var l=f.slice(1);if(r){e.console.log("command matched: %c"+t[a].originalPhrase,i);l.length&&e.console.log("with parameters",l)}t[a].callback.apply(this,l);return!0}}}return!1};t=[];var o,u;for(var a in s){o=e[s[a]]||s[a];if(typeof o!="function")continue;u=f(a);t.push({command:u,callback:o,originalPhrase:a})}r&&e.console.log("Commands successfully loaded: %c"+t.length,i)},start:function(){n.start()},abort:function(){n.abort()},debug:function(e){arguments.length>0?r=!!e:r=!0},setLanguage:function(e){n.lang=e}}}).call(this);